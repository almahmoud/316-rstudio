+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''APAlyzer'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20
Bioconductor version 3.16 (BiocManager 1.30.20), R 4.2.3 (2023-03-15)
Installing package(s) 'APAlyzer'
also installing the dependencies ‘R.methodsS3’, ‘R.oo’, ‘R.utils’, ‘R.cache’, ‘ggrepel’, ‘repmis’, ‘org.Mm.eg.db’, ‘TBX20BamSubset’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/R.methodsS3_1.8.2.tar.gz'
Content type 'binary/octet-stream' length 80411 bytes (78 KB)
==================================================
downloaded 78 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/R.oo_1.25.0.tar.gz'
Content type 'binary/octet-stream' length 954776 bytes (932 KB)
==================================================
downloaded 932 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/R.utils_2.12.2.tar.gz'
Content type 'binary/octet-stream' length 1394432 bytes (1.3 MB)
==================================================
downloaded 1.3 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/R.cache_0.16.0.tar.gz'
Content type 'binary/octet-stream' length 108012 bytes (105 KB)
==================================================
downloaded 105 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/ggrepel_0.9.3.tar.gz'
Content type 'binary/octet-stream' length 270934 bytes (264 KB)
==================================================
downloaded 264 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/repmis_0.5.tar.gz'
Content type 'binary/octet-stream' length 50643 bytes (49 KB)
==================================================
downloaded 49 KB

trying URL 'https://bioconductor.org/packages/3.16/data/annotation/src/contrib/org.Mm.eg.db_3.16.0.tar.gz'
Content type 'application/gzip' length 79020899 bytes (75.4 MB)
==================================================
downloaded 75.4 MB

trying URL 'https://bioconductor.org/packages/3.16/data/experiment/src/contrib/TBX20BamSubset_1.34.0.tar.gz'
Content type 'application/gzip' length 99231137 bytes (94.6 MB)
==================================================
downloaded 94.6 MB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/APAlyzer_1.12.0.tar.gz'
Content type 'application/gzip' length 4094440 bytes (3.9 MB)
==================================================
downloaded 3.9 MB

* installing *binary* package ‘R.methodsS3’ ...
* ‘R.methodsS3’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘R.methodsS3’ as ‘R.methodsS3_1.8.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (R.methodsS3)
* installing *binary* package ‘ggrepel’ ...
* ‘ggrepel’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ggrepel’ as ‘ggrepel_0.9.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ggrepel)
* installing *source* package ‘org.Mm.eg.db’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘org.Mm.eg.db’ as ‘org.Mm.eg.db_3.16.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (org.Mm.eg.db)
* installing *source* package ‘TBX20BamSubset’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘TBX20BamSubset’ as ‘TBX20BamSubset_1.34.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (TBX20BamSubset)
* installing *binary* package ‘R.oo’ ...
* ‘R.oo’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘R.oo’ as ‘R.oo_1.25.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (R.oo)
* installing *binary* package ‘R.utils’ ...
* ‘R.utils’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘R.utils’ as ‘R.utils_2.12.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (R.utils)
* installing *binary* package ‘R.cache’ ...
* ‘R.cache’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘R.cache’ as ‘R.cache_0.16.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (R.cache)
* installing *binary* package ‘repmis’ ...
* ‘repmis’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘repmis’ as ‘repmis_0.5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (repmis)
* installing *source* package ‘APAlyzer’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘APAlyzer’ as ‘APAlyzer_1.12.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (APAlyzer)

The downloaded source packages are in
	‘/tmp/Rtmp2Jeacc/downloaded_packages’

real	4m50.875s
user	4m32.931s
sys	0m6.526s
* installing *source* package ‘pasilla’ ...
** using staged installation
** data
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘pasilla’ as ‘pasilla_1.26.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pasilla)
* installing *source* package ‘pasillaBamSubset’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘pasillaBamSubset’ as ‘pasillaBamSubset_0.36.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pasillaBamSubset)
