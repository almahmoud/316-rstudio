+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''Category'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20
Bioconductor version 3.16 (BiocManager 1.30.20), R 4.2.3 (2023-03-15)
Installing package(s) 'Category'
also installing the dependencies ‘regioneR’, ‘bezier’, ‘bamsignals’, ‘EBarrays’, ‘ALL’, ‘karyoploteR’, ‘org.Sc.sgd.db’

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/regioneR_1.30.0.tar.gz'
Content type 'application/gzip' length 1930127 bytes (1.8 MB)
==================================================
downloaded 1.8 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/bezier_1.1.2.tar.gz'
Content type 'binary/octet-stream' length 74898 bytes (73 KB)
==================================================
downloaded 73 KB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/bamsignals_1.30.0.tar.gz'
Content type 'application/gzip' length 3239995 bytes (3.1 MB)
==================================================
downloaded 3.1 MB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/EBarrays_2.62.0.tar.gz'
Content type 'application/gzip' length 956570 bytes (934 KB)
==================================================
downloaded 934 KB

trying URL 'https://bioconductor.org/packages/3.16/data/experiment/src/contrib/ALL_1.40.0.tar.gz'
Content type 'application/gzip' length 11383132 bytes (10.9 MB)
==================================================
downloaded 10.9 MB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/karyoploteR_1.24.0.tar.gz'
Content type 'application/gzip' length 1647838 bytes (1.6 MB)
==================================================
downloaded 1.6 MB

trying URL 'https://bioconductor.org/packages/3.16/data/annotation/src/contrib/org.Sc.sgd.db_3.16.0.tar.gz'
Content type 'application/gzip' length 20933566 bytes (20.0 MB)
==================================================
downloaded 20.0 MB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/Category_2.64.0.tar.gz'
Content type 'application/gzip' length 867776 bytes (847 KB)
==================================================
downloaded 847 KB

* installing *source* package ‘regioneR’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘regioneR’ as ‘regioneR_1.30.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (regioneR)
* installing *binary* package ‘bezier’ ...
* ‘bezier’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘bezier’ as ‘bezier_1.1.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (bezier)
* installing *source* package ‘bamsignals’ ...
** using staged installation
** libs
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG -D_FILE_OFFSET_BITS=64 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhtslib/include' -I'/tmp/tmp/built/zlibbioc/include' -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c CountSignals.cpp -o CountSignals.o
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG -D_FILE_OFFSET_BITS=64 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhtslib/include' -I'/tmp/tmp/built/zlibbioc/include' -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG -D_FILE_OFFSET_BITS=64 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhtslib/include' -I'/tmp/tmp/built/zlibbioc/include' -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c bamsignals.cpp -o bamsignals.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -D_FILE_OFFSET_BITS=64 -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/Rhtslib/include' -I'/tmp/tmp/built/zlibbioc/include' -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c bamsignals_init.c -o bamsignals_init.o
g++ -std=gnu++14 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o bamsignals.so CountSignals.o RcppExports.o bamsignals.o bamsignals_init.o /tmp/tmp/built/Rhtslib/usrlib/libhts.a -lcurl -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-bamsignals/00new/bamsignals/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘bamsignals’ as ‘bamsignals_1.30.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (bamsignals)
* installing *source* package ‘EBarrays’ ...
** using staged installation
** libs
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ebarrays.c -o ebarrays.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o EBarrays.so ebarrays.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-EBarrays/00new/EBarrays/libs
** R
** data
** demo
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘EBarrays’ as ‘EBarrays_2.62.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (EBarrays)
* installing *source* package ‘ALL’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ALL’ as ‘ALL_1.40.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ALL)
* installing *source* package ‘org.Sc.sgd.db’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘org.Sc.sgd.db’ as ‘org.Sc.sgd.db_3.16.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (org.Sc.sgd.db)
* installing *source* package ‘Category’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘Category’ as ‘Category_2.64.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Category)
* installing *source* package ‘karyoploteR’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘karyoploteR’ as ‘karyoploteR_1.24.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (karyoploteR)

The downloaded source packages are in
	‘/tmp/RtmpT1S9MY/downloaded_packages’

real	4m19.803s
user	3m56.384s
sys	0m12.131s
