+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''MMAPPR2'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20
Bioconductor version 3.16 (BiocManager 1.30.20), R 4.2.3 (2023-03-15)
Installing package(s) 'MMAPPR2'
also installing the dependencies ‘mockery’, ‘MMAPPR2data’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/mockery_0.4.3.tar.gz'
Content type 'binary/octet-stream' length 41581 bytes (40 KB)
==================================================
downloaded 40 KB

trying URL 'https://bioconductor.org/packages/3.16/data/experiment/src/contrib/MMAPPR2data_1.12.0.tar.gz'
Content type 'application/gzip' length 502090 bytes (490 KB)
==================================================
downloaded 490 KB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/MMAPPR2_1.12.0.tar.gz'
Content type 'application/gzip' length 400368 bytes (390 KB)
==================================================
downloaded 390 KB

* installing *binary* package ‘mockery’ ...
* ‘mockery’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘mockery’ as ‘mockery_0.4.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mockery)
* installing *source* package ‘MMAPPR2data’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘MMAPPR2data’ as ‘MMAPPR2data_1.12.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (MMAPPR2data)
* installing *source* package ‘MMAPPR2’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘MMAPPR2’ as ‘MMAPPR2_1.12.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (MMAPPR2)

The downloaded source packages are in
	‘/tmp/RtmpIZIlyK/downloaded_packages’

real	0m48.509s
user	0m42.893s
sys	0m2.822s
* installing *binary* package ‘pixmap’ ...
* ‘pixmap’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘pixmap’ as ‘pixmap_0.4-12_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pixmap)
* installing *binary* package ‘sp’ ...
* ‘sp’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘sp’ as ‘sp_1.6-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (sp)
* installing *binary* package ‘segmented’ ...
* ‘segmented’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘segmented’ as ‘segmented_1.6-4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (segmented)
* installing *binary* package ‘tzdb’ ...
* ‘tzdb’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘tzdb’ as ‘tzdb_0.3.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tzdb)
* installing *source* package ‘MMAPPR2data’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘MMAPPR2data’ as ‘MMAPPR2data_1.12.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (MMAPPR2data)
* installing *binary* package ‘ade4’ ...
* ‘ade4’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ade4’ as ‘ade4_1.7-22_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ade4)
* installing *binary* package ‘vroom’ ...
* ‘vroom’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘vroom’ as ‘vroom_1.6.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (vroom)
* installing *binary* package ‘seqinr’ ...
* ‘seqinr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘seqinr’ as ‘seqinr_4.2-30_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (seqinr)
* installing *binary* package ‘readr’ ...
* ‘readr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘readr’ as ‘readr_2.1.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (readr)
