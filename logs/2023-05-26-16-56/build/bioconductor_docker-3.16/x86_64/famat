+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''famat'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20
Bioconductor version 3.16 (BiocManager 1.30.20), R 4.2.3 (2023-03-15)
Installing package(s) 'famat'
also installing the dependencies ‘BiasedUrn’, ‘gprofiler2’, ‘ontologyIndex’, ‘shinydashboard’, ‘shinyBS’, ‘plotly’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/BiasedUrn_2.0.9.tar.gz'
Content type 'binary/octet-stream' length 284671 bytes (277 KB)
==================================================
downloaded 277 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/gprofiler2_0.2.1.tar.gz'
Content type 'binary/octet-stream' length 2083009 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/ontologyIndex_2.10.tar.gz'
Content type 'binary/octet-stream' length 1598703 bytes (1.5 MB)
==================================================
downloaded 1.5 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/shinydashboard_0.7.2.tar.gz'
Content type 'binary/octet-stream' length 321346 bytes (313 KB)
==================================================
downloaded 313 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/shinyBS_0.61.1.tar.gz'
Content type 'binary/octet-stream' length 103341 bytes (100 KB)
==================================================
downloaded 100 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/plotly_4.10.1.tar.gz'
Content type 'binary/octet-stream' length 3175523 bytes (3.0 MB)
==================================================
downloaded 3.0 MB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/famat_1.8.0.tar.gz'
Content type 'application/gzip' length 4108912 bytes (3.9 MB)
==================================================
downloaded 3.9 MB

* installing *binary* package ‘BiasedUrn’ ...
* ‘BiasedUrn’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘BiasedUrn’ as ‘BiasedUrn_2.0.9_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiasedUrn)
* installing *binary* package ‘ontologyIndex’ ...
* ‘ontologyIndex’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ontologyIndex’ as ‘ontologyIndex_2.10_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ontologyIndex)
* installing *binary* package ‘shinydashboard’ ...
* ‘shinydashboard’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘shinydashboard’ as ‘shinydashboard_0.7.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinydashboard)
* installing *binary* package ‘shinyBS’ ...
* ‘shinyBS’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘shinyBS’ as ‘shinyBS_0.61.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinyBS)
* installing *binary* package ‘plotly’ ...
* ‘plotly’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘plotly’ as ‘plotly_4.10.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (plotly)
* installing *binary* package ‘gprofiler2’ ...
* ‘gprofiler2’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘gprofiler2’ as ‘gprofiler2_0.2.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (gprofiler2)
* installing *source* package ‘famat’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘famat’ as ‘famat_1.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (famat)

The downloaded source packages are in
	‘/tmp/Rtmp4bgYcP/downloaded_packages’

real	0m52.848s
user	0m44.333s
sys	0m2.397s
