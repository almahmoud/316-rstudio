+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''netSmooth'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20
Bioconductor version 3.16 (BiocManager 1.30.20), R 4.2.3 (2023-03-15)
Installing package(s) 'netSmooth'
also installing the dependencies ‘gsubfn’, ‘proto’, ‘chron’, ‘sqldf’, ‘hash’, ‘plotrix’, ‘entropy’, ‘STRINGdb’, ‘NMI’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/gsubfn_0.7.tar.gz'
Content type 'binary/octet-stream' length 354082 bytes (345 KB)
==================================================
downloaded 345 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/proto_1.0.0.tar.gz'
Content type 'binary/octet-stream' length 469403 bytes (458 KB)
==================================================
downloaded 458 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/chron_2.3-60.tar.gz'
Content type 'binary/octet-stream' length 186288 bytes (181 KB)
==================================================
downloaded 181 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/sqldf_0.4-11.tar.gz'
Content type 'binary/octet-stream' length 76425 bytes (74 KB)
==================================================
downloaded 74 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/hash_2.2.6.2.tar.gz'
Content type 'binary/octet-stream' length 180213 bytes (175 KB)
==================================================
downloaded 175 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/plotrix_3.8-2.tar.gz'
Content type 'binary/octet-stream' length 1139395 bytes (1.1 MB)
==================================================
downloaded 1.1 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/entropy_1.3.1.tar.gz'
Content type 'binary/octet-stream' length 87087 bytes (85 KB)
==================================================
downloaded 85 KB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/STRINGdb_2.10.1.tar.gz'
Content type 'application/gzip' length 8190717 bytes (7.8 MB)
==================================================
downloaded 7.8 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/2023-04-20/src/contrib/NMI_2.0.tar.gz'
Content type 'binary/octet-stream' length 10196 bytes
==================================================
downloaded 10196 bytes

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/netSmooth_1.18.0.tar.gz'
Content type 'application/gzip' length 3092929 bytes (2.9 MB)
==================================================
downloaded 2.9 MB

* installing *binary* package ‘proto’ ...
* ‘proto’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘proto’ as ‘proto_1.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (proto)
* installing *binary* package ‘chron’ ...
* ‘chron’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘chron’ as ‘chron_2.3-60_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (chron)
* installing *binary* package ‘hash’ ...
* ‘hash’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘hash’ as ‘hash_2.2.6.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (hash)
* installing *binary* package ‘plotrix’ ...
* ‘plotrix’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘plotrix’ as ‘plotrix_3.8-2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (plotrix)
* installing *binary* package ‘entropy’ ...
* ‘entropy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘entropy’ as ‘entropy_1.3.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (entropy)
* installing *binary* package ‘NMI’ ...
* ‘NMI’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘NMI’ as ‘NMI_2.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (NMI)
* installing *binary* package ‘gsubfn’ ...
* ‘gsubfn’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘gsubfn’ as ‘gsubfn_0.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (gsubfn)
* installing *source* package ‘netSmooth’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘netSmooth’ as ‘netSmooth_1.18.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (netSmooth)
* installing *binary* package ‘sqldf’ ...
* ‘sqldf’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘sqldf’ as ‘sqldf_0.4-11_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (sqldf)
* installing *source* package ‘STRINGdb’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘STRINGdb’ as ‘STRINGdb_2.10.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (STRINGdb)

The downloaded source packages are in
	‘/tmp/RtmpzovabF/downloaded_packages’

real	1m24.099s
user	1m3.585s
sys	0m4.290s
